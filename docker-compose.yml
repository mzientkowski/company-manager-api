networks:
  company_manager_net:
    driver: bridge
services:
  app:
    build: .
    environment:
      RAILS_ENV: 'production'
      RAILS_MASTER_KEY: '0d063701679bd9c333c335e74e3a3985' # FIXME: keep secret
      POSTGRES_HOST: postgres-docker
      POSTGRES_USER: 'postgres' # FIXME: keep secret
      POSTGRES_PASSWORD: 'postgres' # FIXME: keep secret
      REDIS_HOST: redis-docker
    command: bundle exec rails s -b '0.0.0.0'
    volumes:
      - .:/rails
    ports:
      - "3000:3000"
    networks:
      - company_manager_net
    depends_on:
      - postgres-docker
      - redis-docker
  postgres-docker:
    image: public.ecr.aws/docker/library/postgres:16.1-alpine3.18
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - PGDATA=/data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - company_manager_net
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 3s
      timeout: 5s
      retries: 5
  redis-docker:
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    image: public.ecr.aws/docker/library/redis:7.4-alpine3.21
    command: redis-server --protected-mode no
    ports:
      - "6379:6379"
    networks:
      - company_manager_net
volumes:
  postgres:
